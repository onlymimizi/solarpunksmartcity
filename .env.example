# 基础密钥配置
# 私钥需包含 0x 前缀；仅用于测试网或本地链
PRIVATE_KEY=0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
# 平台（后台）私钥：用于代理执行（铸造SBT/发放积分/设置TBA），优先于上面的 PRIVATE_KEY
PLATFORM_PRIVATE_KEY=0xbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

# RPC 连接（可直接提供RPC_URL，或使用 ALCHEMY_API_KEY 走预设）
RPC_URL=
ALCHEMY_API_KEY=replace_with_your_alchemy_key

# 区块浏览器 API Key（用于 verify）
ETHERSCAN_API_KEY=replace_with_your_etherscan_key
POLYGONSCAN_API_KEY=replace_with_your_polygonscan_key

# 部署后填入的合约地址（交互脚本与服务端依赖）
CONTRACT_SBT=0xYourSBTAddress
CONTRACT_PROOF=0xYourProofRegistryAddress
CONTRACT_POINTS=0xYourPointsAddress

# 交互脚本参数（可按需修改）
# mintSBT.ts
TO_ADDRESS=0xRecipientAddress
TOKEN_URI=ipfs://your-cert-metadata
KYC_HEX=0x0000000000000000000000000000000000000000000000000000000000000000

# submitProof.ts
SBT_ID=1
CID=ipfs://bafyYourCid
CONTENT_HASH=0x1111111111111111111111111111111111111111111111111111111111111111

# mintPoints.ts
POINTS_TO=0xRecipientAddress
AMOUNT=1000

# 服务端配置
PORT=3000
JWT_SECRET=replace_with_a_strong_secret
WEB3_STORAGE_TOKEN=replace_with_web3_storage_token

# ERC-6551 配置
# 已部署的 ERC6551Registry 地址
CONTRACT_ERC6551_REGISTRY=0xYourRegistryAddress
# 自动为新铸的 SBT 创建并绑定 TBA（server/src/chain.ts 内生效）
AUTO_CREATE_TBA=0
# 用于确定性生成 TBA 地址的盐（32字节，默认全0）
TBA_SALT=0x0000000000000000000000000000000000000000000000000000000000000000
# 供 scripts/bindTBA.ts 使用的示例 tokenId（可在命令行覆盖）
TBA_TOKEN_ID=1

# 安全与访问控制
# 留空放行全部；多个域名用逗号分隔
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5173
# 管理接口 API Key（启用后，对敏感接口强制校验 X-API-KEY）
ADMIN_API_KEY=
# 全局限流（默认：15分钟 100 次）
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX=100

# 官方 ERC-6551 开关与地址（开启 OFFICIAL_6551=1 后生效）
OFFICIAL_6551=0
OFFICIAL_6551_REGISTRY=0xYourOfficialRegistryAddress
ACCOUNT_IMPLEMENTATION=0xYourAccountImplementationAddress
